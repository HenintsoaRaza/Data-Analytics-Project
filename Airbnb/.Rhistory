top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
print(as.double(total[total$city == "malaga", tot]))
for (c in cities){
tot <- total$c["tot"]
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n = n / 10)
}
#total[total$city == "sevilla", "tot"]
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
print(as.double(total[total$city == "malaga", "tot"]))
for (c in cities){
tot <- total$c["tot"]
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n = n / 10)
}
#total[total$city == "sevilla", "tot"]
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
print(as.double(total["malaga", "tot"]))
for (c in cities){
tot <- total$c["tot"]
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n = n / 10)
}
#total[total$city == "sevilla", "tot"]
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
print(as.double(total[total$city == "malaga", tot""]))
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n = n / as.double(total[total$city == c, "tot"]))
}
#total[total$city == "sevilla", "tot"]
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n = n / as.double(total[total$city == top_10_neighborhood$city, "tot"]))
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood[city == c, n] <- top_10_neighborhood[city == c, n] / total[city == c, tot]
#top_10_neighborhood <- top_10_neighborhood %>%
#mutate(n = n / as.double(total[total$city == c, "tot"]))
}
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood[top_10_neighborhood$city == c, n] <- top_10_neighborhood[top_10_neighborhood$city == c, n] / total[top_10_neighborhood$city == c, tot]
#top_10_neighborhood <- top_10_neighborhood %>%
#mutate(n = n / as.double(total[total$city == c, "tot"]))
}
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n =ifelse(top_10_neighborhood$city == c, n / as.double(total[total$city == c, "tot"]), n) )
}
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n =  n / as.double(total[total$city == c, "tot"]))
}
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
top_10_neighborhood["tot"] <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for (c in cities){
top_10_neighborhood <- top_10_neighborhood %>%
mutate(n =  n / as.double(total[total$city == c, "tot"]))
}
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
top_10_neighborhood
top_10_neighborhood <- listings %>%
group_by(city) %>%
count(neighbourhood_cleansed) %>%
arrange(city, desc(n))
top_10_neighborhood
total <- top_10_neighborhood %>%
group_by(city) %>%
summarize(tot = sum(n))
total
for(c in cities){
proportion_10neighborhood<- ggplot(top_10_neighborhood[top_10_neighborhood$city == c,], aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(top_10_neighborhood[top_10_neighborhood$city == c,], aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed[0:10,], y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(top_10_neighborhood[top_10_neighborhood$city == c,], aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 10), aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(city)
g <- proportion_10neighborhood +
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(city, fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(city, -n), fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(neighbourhood_cleansed, -n), fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(neighbourhood_cleansed, n), fill= city))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(neighbourhood_cleansed, -n), fill= n))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(neighbourhood_cleansed, -n), n))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
for(c in cities){
proportion_10neighborhood<- ggplot(slice(top_10_neighborhood[top_10_neighborhood$city == c,], 0:10), aes(x = reorder(neighbourhood_cleansed, -n), fill= n))
g <- proportion_10neighborhood +
geom_bar(aes(x = neighbourhood_cleansed, y = n), stat="identity",  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
theme(legend.position = "none") + coord_flip() + facet_wrap(~ city) + xlab("Neighborhoods ") + ylab("Proportions")
print(g)
}
listings %>%
group_by(city, room_type, bedrooms, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, room_type, bedrooms, neighbourhood_cleansed) %>%
summarise(average_revenue_30 = mean(revenue_30))
listings %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
for (c in cities) {
listings %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
}
for (c in cities) {
listings[listings$city] %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
}
for (c in cities) {
listings[listings$city == c] %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
}
for (c in cities) {
listings[listings$city == c,] %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings[listings$city == c,] %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings[listings$city == c,] %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
}
for (c in cities) {
listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(df1)
df2 <- listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(c , df1)
df2 <- listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(c(c,df1))
df2 <- listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(paste0(c,df1))
df2 <- listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(df1)
df2 <- listings[listings$city == c,] %>%
group_by(bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(city, room_type) %>%
summarise(average_availability_30 = mean(availability_30))
print(df1)
df2 <- listings[listings$city == c,] %>%
group_by(city, bedrooms) %>%
summarise(average_availability_30 = mean(availability_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_availability_30 = mean(availability_30))
print(df3)
}
for (c in cities) {
df1 <- listings[listings$city == c,] %>%
group_by(city, room_type) %>%
summarise(average_revenue_30 = mean(revenue_30))
print(df1)
df2 <- listings[listings$city == c,] %>%
group_by(city, bedrooms) %>%
summarise(average_revenue_30 = mean(revenue_30))
print(df2)
df3 <- listings[listings$city == c,] %>%
group_by(city, neighbourhood_cleansed) %>%
summarise(average_revenue_30 = mean(revenue_30))
print(df3)
}
for (c in cities) {
avgAvai30_city_roomType <- ggplot(listings[listings$city == c], aes(city, availability_30, fill=city))
g <- avgAvai30_city_roomType + geom_boxplot(aes(colour = room_type),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_roomType <- ggplot(listings[listings$city == c,], aes(city, availability_30, fill=city))
g <- avgAvai30_city_roomType + geom_boxplot(aes(colour = room_type),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_roomType <- ggplot(listings[listings$city == c,], aes(city, availability_30, fill=city))
g <- avgAvai30_city_roomType + geom_boxplot(aes(colour = room_type),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1") + facet_wrap(~ city)
print(g)
}
for (c in cities) {
avgAvai30_city_roomType <- ggplot(listings[listings$city == c,], aes(city, availability_30, fill=city))
g <- avgAvai30_city_roomType + geom_boxplot(aes(colour = room_type),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_bedrooms <- ggplot(listings[listings$city == c, ], aes(city, availability_30, fill=city))
g <- avgAvai30_city_bedrooms + geom_boxplot(aes(colour = bedrooms),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
for (c in cities) {
avgAvai30_city_bedrooms <- ggplot(listings[listings$city == c, ], aes(city, availability_30, fill=city))
g <- avgAvai30_city_bedrooms + geom_boxplot(aes(colour = bedrooms),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_roomType <- ggplot(listings[listings$city == c,], aes(city, availability_30, fill=city))
g <- avgAvai30_city_roomType + geom_boxplot(aes(colour = room_type),  lwd = 0.8, position = position_dodge(0.9), outlier.shape = NA) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_bedrooms <- ggplot(listings[listings$city == c, ], aes(city, availability_30, fill=city))
g <- avgAvai30_city_bedrooms + geom_boxplot(aes(colour = bedrooms),  lwd = 0.8, position = position_dodge(0.9), outlier.shape = NA) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_bedrooms <- ggplot(listings[listings$city == c, ], aes(city, availability_30, fill=city))
g <- avgAvai30_city_bedrooms + geom_boxplot(aes(colour = bedrooms),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
for (c in cities) {
avgAvai30_city_bedrooms <- ggplot(listings[listings$city == c & !is.na(listings$bedrooms), ], aes(city, availability_30, fill=city))
g <- avgAvai30_city_bedrooms + geom_boxplot(aes(colour = bedrooms),  lwd = 0.8, position = position_dodge(0.9), na.rm = T) +
scale_y_continuous(limits = quantile(listings$availability_30, c(0.1, 0.9), na.rm = T)) +
scale_fill_brewer(palette="Set1")
print(g)
}
